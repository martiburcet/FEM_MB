function [n,w,xi,N,dNdxi]=C3D8
%====================== No. integration points =============================
%
%   Defines the number of integration points:be used for
%   each element type
%

n = 8;
ncoord=3;  
nodes=8;
%
%====================== INTEGRATION POINTS ==================================
%
%   Defines positions of integration points
%

 x1D = [-0.5773502692,0.5773502692];
         for k = 1:2
           for j = 1:2 
             for i = 1:2
               n = 4*(k-1) + 2*(j-1) + i;
               xi(1,n) = x1D(i);
               xi(2,n) = x1D(j);
               xi(3,n) = x1D(k);
             end
           end
         end
         
         w = [1.,1.,1.,1.,1.,1.,1.,1.];
%
%================= SHAPE FUNCTIONS ==================================
%
%        Nij: Shape functions of the Int Point i [4x4] Ni [4x1]

N=zeros(n,n);
for i1=1:n
xi4 = 1.-xi(i1,1)-xi(i1,2)-xi(i1,3);
       N(i1,1) = (2.*xi(i1,1)-1.)*xi(i1,1);
       N(i1,2) = (2.*xi(i1,2)-1.)*xi(i1,2);
       N(i1,3) = (2.*xi(i1,3)-1.)*xi(i1,3);
       N(i1,4) = (2.*xi4-1.)*xi4;
       N(i1,5) = 4.*xi(i1,1)*xi(i1,2);
       N(i1,6) = 4.*xi(i1,2)*xi(i1,3);
       N(i1,7) = 4.*xi(i1,3)*xi(i1,1);
       N(i1,8) = 4.*xi(i1,1)*xi4;
       N(i1,9) = 4.*xi(i1,2)*xi4;
       N(i1,10) = 4.*xi(i1,3)*xi4;
end
%
%================= SHAPE FUNCTION DERIVATIVES ======================
%
%        Nij,r: Dev of shape functions of the Int Point i [4x8]
%        [2*i-1 2*i] => dNi,r [4x2]
dNdxi = zeros(ncoord*n,nodes);
for i1=1:n
       xi4 = 1.-xi(i1,1)-xi(i1,2)-xi(i1,3);
       dNdxi(1,1) = (4.*xi(i1,1)-1.);
       dNdxi(2,2) = (4.*xi(i1,2)-1.);
       dNdxi(3,3) = (4.*xi(i1,3)-1.);
       dNdxi(4,1) = -(4.*xi4-1.);
       dNdxi(4,2) = -(4.*xi4-1.);
       dNdxi(4,3) = -(4.*xi4-1.);
       dNdxi(5,1) = 4.*xi(i1,2);
       dNdxi(5,2) = 4.*xi(i1,1);
       dNdxi(6,2) = 4.*xi(i1,3);
       dNdxi(6,3) = 4.*xi(i1,2);
       dNdxi(7,1) = 4.*xi(i1,3);
       dNdxi(7,3) = 4.*xi(i1,1); 
       dNdxi(8,1) = 4.*(xi4-xi(i1,1));
       dNdxi(8,2) = -4.*xi(i1,1);
       dNdxi(8,3) = -4.*xi(v1);
       dNdxi(9,1) = -4.*xi(i1,2);
       dNdxi(9,2) = 4.*(xi4-xi(i1,2));
       dNdxi(9,3) = -4.*xi(i1,2);
       dNdxi(10,1) = -4.*xi(i1,3)*xi4;
       dNdxi(10,2) = -4.*xi(i1,3);
       dNdxi(10,3) = 4.*(xi4-xi(i1,3));
end
end
%
